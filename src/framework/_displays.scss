/*============================================================================*\
   Displays helpers
\*============================================================================*/

$has-classes: false !default;
$displays-with-force: false !default;
$displays-with-breakpoints: false !default;
$displays: (none, block, inline, inline-block) !default;

/*============================================================================*\
   Helper mixins
\*============================================================================*/

/**
 * A mixin to hide elements but keep them accessible
 *
 * @author Facebook Accessibility Team
 */
@mixin display-hidden-accessible {
  position: absolute;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  pointer-events: none;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

/*============================================================================*\
   Helper classes
\*============================================================================*/

@if $has-classes {
  @each $display in $displays {
    .display-#{$display} {
      display: $display;
    }

    @if $displays-with-force {
      .display-#{$display}--force {
        display: $display !important;
      }
    }
  }

  .display-hidden-accessible {
    @include display-hidden-accessible();
  }

  /*==========================================================================*\
     Visibility breakpoints modifiers
  \*==========================================================================*/

  @if $displays-with-breakpoints {
    @include for-each-breakpoints using ($breakpoint) {
      @each $display in $displays {
        .display-#{$display}--#{$breakpoint} {
          display: $display;
        }

        @if $displays-with-force {
          .display-#{$display}--force-#{$breakpoint} {
            display: $display !important;
          }
        }
      }

      .display-hidden-accessible {
        @include display-hidden-accessible();
      }
    }
  }
}
